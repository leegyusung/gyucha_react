let passport,Strategy,User;_30a‍.x([["default",()=>kakaoStrategy]]);_30a‍.w("passport",[["default",["passport"],function(v){passport=v}]]);_30a‍.w("passport-kakao",[["Strategy",["Strategy"],function(v){Strategy=v}]]);_30a‍.w("../../models/user",[["default",["User"],function(v){User=v}]]);




               function kakaoStrategy() {
    passport.use(new kakaoStrategy.Strategy({
        clientID: process.env.CLIENT_KEY,
        callbackURL: '/api/auth/kakao/callback',
    }, async (accessToken, refreshToken, profile, done) => {
        _30a‍.g.console.log('kakao profile', profile);
        try {
            const exUser = await User.findOne({
                where: {}
            });
            if (exUser) {
                done(null, exUser);
            } else {
                const newUser = await User.create({

                });
                done(null, newUser);
            }
        } catch (error) {
            _30a‍.g.console.error(error);
            done(error);
        }
    }))
};
